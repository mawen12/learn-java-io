package com.mawen.learn.basic.io.book.chapter4;

import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;

/**
 * Piping Randomly Generated Bytes from a Sender Thread to a Receiver Thread.
 *
 * @author <a href="1181963012mw@gmail.com">mawen12</a>
 * @see 4-3
 * @since 2024/5/29
 */
public class PipedStreamsDemo {

	final static int LIMIT = 10;

	public static void main(String[] args) throws IOException {
		final PipedOutputStream pos = new PipedOutputStream();
		final PipedInputStream pis = new PipedInputStream(pos);

		Runnable senderTask = () -> {
			try {
				for (int i = 0; i < LIMIT; i++) {
					pos.write((byte) (Math.random() * 256));
				}
			}
			catch (IOException e) {
				e.printStackTrace();
			}
			finally {
				try {
					pos.close();
				}
				catch (IOException e) {
					e.printStackTrace();
				}
			}
		};

		Runnable receiverTask = () -> {
			try {
				int b;
				while ((b = pis.read()) != -1) {
					System.out.println(b);
				}
			}
			catch (IOException e) {
				e.printStackTrace();
			}
			finally {
				try {
					pis.close();
				}
				catch (IOException e) {
					e.printStackTrace();
				}
			}
		};

		Thread sender = new Thread(senderTask);
		Thread receiver = new Thread(receiverTask);
		sender.start();
		receiver.start();
	}
}
